services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=delpresence
      - JWT_SECRET=${JWT_SECRET:-delpresence_secret_key}
      - SERVER_PORT=8080
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-*}
    networks:
      - delpresence-network
    command: ./delpresence-server
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
    networks:
      - delpresence-network
    depends_on:
      - api

  db:
    image: postgres:15-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=delpresence
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - delpresence-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  delpresence-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local 